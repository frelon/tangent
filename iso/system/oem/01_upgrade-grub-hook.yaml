# Compatibility upgrade hook for grub2
#
# This file is part of cOS and will get reset during upgrades.
#
# Before you change this file manually,
# consider copying this file to /usr/local/cloud-config or
# copy the file with a prefix starting by 90, e.g. /oem/91_custom.yaml
name: "Adapt grub2 configuration on updates"
stages:
  after-install:
    - &grubenv
      # TODO this should be part of the elemental install command
      name: "Set grub env variables"
      commands:
      - |
        statemnt="/run/cos/state"
        if [ ! -f "${statemnt}/grub2/grub.cfg" ]; then
          statemnt="/run/initramfs/cos-state"
        fi

        grub2-editenv ${statemnt}/grub_oem_env set state_label=COS_STATE
        grub2-editenv ${statemnt}/grub_oem_env set active_label=COS_ACTIVE
        grub2-editenv ${statemnt}/grub_oem_env set passive_label=COS_PASSIVE
        grub2-editenv ${statemnt}/grub_oem_env set recovery_label=COS_RECOVERY
        grub2-editenv ${statemnt}/grub_oem_env set system_label=COS_SYSTEM
        grub2-editenv ${statemnt}/grub_oem_env set oem_label=COS_OEM
  after-upgrade-chroot:
    - &installhook
      name: "Install grub updater in OEM"
      commands:
      - |
        hook="/system/oem/01_upgrade_grub_hook.yaml"

        if mountpoint -q /oem; then
          [ -f "${hook}" ] || exit 0
          cp "${hook}" /oem
        fi
  after-upgrade:
    # TODO labels should be parsed from state.yaml
    - <<: *grubenv
  after-upgrade.after:
    - &uninstallhook
      if: '[ -f "/oem/01_upgrade_grub_hook.yaml" ]'
      name: "Uninstall hook from OEM"
      commands:
      - |
        rm /oem/01_upgrade_grub_hook.yaml
  after-reset-chroot:
    - <<: *installhook
  after-reset:
    # TODO labels should be parsed from state.yaml
    - <<: *grubenv
  after-reset.after:
    - <<: *uninstallhook

